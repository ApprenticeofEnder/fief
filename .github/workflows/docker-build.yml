name: Docker build

on:
  workflow_dispatch:
  # schedule:
  #   - cron: 0 * * * *

jobs:
  check:
    name: "Is there a version to build?"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: "Checkout with private submodules if possible"
        uses: ./.github/actions/checkout
        with:
          github_token: ${{ secrets.GH_GLOBAL_TOKEN }}
      - name: Check latest version available on PyPi
        shell: bash
        run: |
          curl "https://pypi.org/rss/project/fief-server/releases.xml" -O
          echo "LATEST_PYPI_VERSION=$(xpath -s '' -q -e 'rss/channel/item[1]/title/text()' releases.xml)" >> $GITHUB_ENV
      - name: Check if this version is built on Docker registry
        shell: bash
        run: |
          echo "IS_LATEST_VERSION_BUILT=$(curl -s "https://api.github.com/orgs/fief-dev/packages/container/fief/versions" -H"Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '[.[] | select(.metadata.container.tags | index("${{ env.LATEST_PYPI_VERSION }}"))] | length')" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: [check]
    if: ${{ env.IS_LATEST_VERSION_BUILT == '0' }}

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    strategy:
      fail-fast: true
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - uses: actions/checkout@v3
      - name: "Checkout with private submodules if possible"
        uses: ./.github/actions/checkout
        with:
          github_token: ${{ secrets.GH_GLOBAL_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          build-args: |
            FIEF_VERSION=${{ env.LATEST_PYPI_VERSION }}
          context: docker/
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
